// Code generated by protoc-gen-go.
// source: steammessages_credentials.steamclient.proto
// DO NOT EDIT!

/*
Package steammessages_credentials_steamclient is a generated protocol buffer package.

It is generated from these files:
	steammessages_credentials.steamclient.proto

It has these top-level messages:
	CCredentials_TestAvailablePassword_Request
	CCredentials_TestAvailablePassword_Response
	CCredentials_GetSteamGuardDetails_Request
	CCredentials_GetSteamGuardDetails_Response
	CCredentials_NewMachineNotificationDialog_Request
	CCredentials_NewMachineNotificationDialog_Response
	CCredentials_ValidateEmailAddress_Request
	CCredentials_ValidateEmailAddress_Response
	CCredentials_SteamGuardPhishingReport_Request
	CCredentials_SteamGuardPhishingReport_Response
*/
package internal

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// discarding unused import google_protobuf "code.google.com/p/goprotobuf/protoc-gen-go/descriptor"
// discarding unused import steammessages_unified_base_steamclient "steammessages_unified_base.steamclient.pb"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type CCredentials_TestAvailablePassword_Request struct {
	Password          *string `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	ShaDigestPassword []byte  `protobuf:"bytes,2,opt,name=sha_digest_password" json:"sha_digest_password,omitempty"`
	AccountName       *string `protobuf:"bytes,3,opt,name=account_name" json:"account_name,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CCredentials_TestAvailablePassword_Request) Reset() {
	*m = CCredentials_TestAvailablePassword_Request{}
}
func (m *CCredentials_TestAvailablePassword_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_TestAvailablePassword_Request) ProtoMessage() {}

func (m *CCredentials_TestAvailablePassword_Request) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CCredentials_TestAvailablePassword_Request) GetShaDigestPassword() []byte {
	if m != nil {
		return m.ShaDigestPassword
	}
	return nil
}

func (m *CCredentials_TestAvailablePassword_Request) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

type CCredentials_TestAvailablePassword_Response struct {
	IsValid          *bool  `protobuf:"varint,3,opt,name=is_valid" json:"is_valid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_TestAvailablePassword_Response) Reset() {
	*m = CCredentials_TestAvailablePassword_Response{}
}
func (m *CCredentials_TestAvailablePassword_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_TestAvailablePassword_Response) ProtoMessage() {}

func (m *CCredentials_TestAvailablePassword_Response) GetIsValid() bool {
	if m != nil && m.IsValid != nil {
		return *m.IsValid
	}
	return false
}

type CCredentials_GetSteamGuardDetails_Request struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Request) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Request{}
}
func (m *CCredentials_GetSteamGuardDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_GetSteamGuardDetails_Request) ProtoMessage()    {}

type CCredentials_GetSteamGuardDetails_Response struct {
	IsSteamguardEnabled        *bool                                                           `protobuf:"varint,1,opt,name=is_steamguard_enabled" json:"is_steamguard_enabled,omitempty"`
	TimestampSteamguardEnabled *uint32                                                         `protobuf:"fixed32,2,opt,name=timestamp_steamguard_enabled" json:"timestamp_steamguard_enabled,omitempty"`
	Newauthentication          []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication `protobuf:"bytes,3,rep,name=newauthentication" json:"newauthentication,omitempty"`
	MachineNameUserchosen      *string                                                         `protobuf:"bytes,4,opt,name=machine_name_userchosen" json:"machine_name_userchosen,omitempty"`
	XXX_unrecognized           []byte                                                          `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response{}
}
func (m *CCredentials_GetSteamGuardDetails_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response) ProtoMessage() {}

func (m *CCredentials_GetSteamGuardDetails_Response) GetIsSteamguardEnabled() bool {
	if m != nil && m.IsSteamguardEnabled != nil {
		return *m.IsSteamguardEnabled
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetTimestampSteamguardEnabled() uint32 {
	if m != nil && m.TimestampSteamguardEnabled != nil {
		return *m.TimestampSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetNewauthentication() []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication {
	if m != nil {
		return m.Newauthentication
	}
	return nil
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetMachineNameUserchosen() string {
	if m != nil && m.MachineNameUserchosen != nil {
		return *m.MachineNameUserchosen
	}
	return ""
}

type CCredentials_GetSteamGuardDetails_Response_NewAuthentication struct {
	TimestampSteamguardEnabled *uint32 `protobuf:"fixed32,1,opt,name=timestamp_steamguard_enabled" json:"timestamp_steamguard_enabled,omitempty"`
	IsWebCookie                *bool   `protobuf:"varint,2,opt,name=is_web_cookie" json:"is_web_cookie,omitempty"`
	Ipaddress                  *int32  `protobuf:"varint,3,opt,name=ipaddress" json:"ipaddress,omitempty"`
	GeolocInfo                 *string `protobuf:"bytes,4,opt,name=geoloc_info" json:"geoloc_info,omitempty"`
	IsRemembered               *bool   `protobuf:"varint,5,opt,name=is_remembered" json:"is_remembered,omitempty"`
	MachineNameUserSupplied    *string `protobuf:"bytes,6,opt,name=machine_name_user_supplied" json:"machine_name_user_supplied,omitempty"`
	XXX_unrecognized           []byte  `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response_NewAuthentication{}
}
func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response_NewAuthentication) ProtoMessage() {}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetTimestampSteamguardEnabled() uint32 {
	if m != nil && m.TimestampSteamguardEnabled != nil {
		return *m.TimestampSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIsWebCookie() bool {
	if m != nil && m.IsWebCookie != nil {
		return *m.IsWebCookie
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIpaddress() int32 {
	if m != nil && m.Ipaddress != nil {
		return *m.Ipaddress
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetGeolocInfo() string {
	if m != nil && m.GeolocInfo != nil {
		return *m.GeolocInfo
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIsRemembered() bool {
	if m != nil && m.IsRemembered != nil {
		return *m.IsRemembered
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetMachineNameUserSupplied() string {
	if m != nil && m.MachineNameUserSupplied != nil {
		return *m.MachineNameUserSupplied
	}
	return ""
}

type CCredentials_NewMachineNotificationDialog_Request struct {
	IsApproved       *bool  `protobuf:"varint,1,opt,name=is_approved" json:"is_approved,omitempty"`
	IsWizardComplete *bool  `protobuf:"varint,2,opt,name=is_wizard_complete" json:"is_wizard_complete,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_NewMachineNotificationDialog_Request) Reset() {
	*m = CCredentials_NewMachineNotificationDialog_Request{}
}
func (m *CCredentials_NewMachineNotificationDialog_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_NewMachineNotificationDialog_Request) ProtoMessage() {}

func (m *CCredentials_NewMachineNotificationDialog_Request) GetIsApproved() bool {
	if m != nil && m.IsApproved != nil {
		return *m.IsApproved
	}
	return false
}

func (m *CCredentials_NewMachineNotificationDialog_Request) GetIsWizardComplete() bool {
	if m != nil && m.IsWizardComplete != nil {
		return *m.IsWizardComplete
	}
	return false
}

type CCredentials_NewMachineNotificationDialog_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_NewMachineNotificationDialog_Response) Reset() {
	*m = CCredentials_NewMachineNotificationDialog_Response{}
}
func (m *CCredentials_NewMachineNotificationDialog_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_NewMachineNotificationDialog_Response) ProtoMessage() {}

type CCredentials_ValidateEmailAddress_Request struct {
	Stoken           *string `protobuf:"bytes,1,opt,name=stoken" json:"stoken,omitempty"`
	Appid            *int32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCredentials_ValidateEmailAddress_Request) Reset() {
	*m = CCredentials_ValidateEmailAddress_Request{}
}
func (m *CCredentials_ValidateEmailAddress_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_ValidateEmailAddress_Request) ProtoMessage()    {}

func (m *CCredentials_ValidateEmailAddress_Request) GetStoken() string {
	if m != nil && m.Stoken != nil {
		return *m.Stoken
	}
	return ""
}

func (m *CCredentials_ValidateEmailAddress_Request) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCredentials_ValidateEmailAddress_Response struct {
	WasValidated     *bool  `protobuf:"varint,1,opt,name=was_validated" json:"was_validated,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCredentials_ValidateEmailAddress_Response) Reset() {
	*m = CCredentials_ValidateEmailAddress_Response{}
}
func (m *CCredentials_ValidateEmailAddress_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_ValidateEmailAddress_Response) ProtoMessage() {}

func (m *CCredentials_ValidateEmailAddress_Response) GetWasValidated() bool {
	if m != nil && m.WasValidated != nil {
		return *m.WasValidated
	}
	return false
}

type CCredentials_SteamGuardPhishingReport_Request struct {
	ParamString      *string `protobuf:"bytes,1,opt,name=param_string" json:"param_string,omitempty"`
	IpaddressActual  *uint32 `protobuf:"varint,2,opt,name=ipaddress_actual" json:"ipaddress_actual,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCredentials_SteamGuardPhishingReport_Request) Reset() {
	*m = CCredentials_SteamGuardPhishingReport_Request{}
}
func (m *CCredentials_SteamGuardPhishingReport_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_SteamGuardPhishingReport_Request) ProtoMessage() {}

func (m *CCredentials_SteamGuardPhishingReport_Request) GetParamString() string {
	if m != nil && m.ParamString != nil {
		return *m.ParamString
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Request) GetIpaddressActual() uint32 {
	if m != nil && m.IpaddressActual != nil {
		return *m.IpaddressActual
	}
	return 0
}

type CCredentials_SteamGuardPhishingReport_Response struct {
	IpaddressLoginattempt   *uint32 `protobuf:"varint,1,opt,name=ipaddress_loginattempt" json:"ipaddress_loginattempt,omitempty"`
	CountrynameLoginattempt *string `protobuf:"bytes,2,opt,name=countryname_loginattempt" json:"countryname_loginattempt,omitempty"`
	StatenameLoginattempt   *string `protobuf:"bytes,3,opt,name=statename_loginattempt" json:"statename_loginattempt,omitempty"`
	CitynameLoginattempt    *string `protobuf:"bytes,4,opt,name=cityname_loginattempt" json:"cityname_loginattempt,omitempty"`
	IpaddressActual         *uint32 `protobuf:"varint,5,opt,name=ipaddress_actual" json:"ipaddress_actual,omitempty"`
	CountrynameActual       *string `protobuf:"bytes,6,opt,name=countryname_actual" json:"countryname_actual,omitempty"`
	StatenameActual         *string `protobuf:"bytes,7,opt,name=statename_actual" json:"statename_actual,omitempty"`
	CitynameActual          *string `protobuf:"bytes,8,opt,name=cityname_actual" json:"cityname_actual,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CCredentials_SteamGuardPhishingReport_Response) Reset() {
	*m = CCredentials_SteamGuardPhishingReport_Response{}
}
func (m *CCredentials_SteamGuardPhishingReport_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_SteamGuardPhishingReport_Response) ProtoMessage() {}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetIpaddressLoginattempt() uint32 {
	if m != nil && m.IpaddressLoginattempt != nil {
		return *m.IpaddressLoginattempt
	}
	return 0
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCountrynameLoginattempt() string {
	if m != nil && m.CountrynameLoginattempt != nil {
		return *m.CountrynameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetStatenameLoginattempt() string {
	if m != nil && m.StatenameLoginattempt != nil {
		return *m.StatenameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCitynameLoginattempt() string {
	if m != nil && m.CitynameLoginattempt != nil {
		return *m.CitynameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetIpaddressActual() uint32 {
	if m != nil && m.IpaddressActual != nil {
		return *m.IpaddressActual
	}
	return 0
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCountrynameActual() string {
	if m != nil && m.CountrynameActual != nil {
		return *m.CountrynameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetStatenameActual() string {
	if m != nil && m.StatenameActual != nil {
		return *m.StatenameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCitynameActual() string {
	if m != nil && m.CitynameActual != nil {
		return *m.CitynameActual
	}
	return ""
}

func init() {
}
