// Code generated by protoc-gen-go.
// source: steammessages_cloud.steamclient.proto
// DO NOT EDIT!

/*
Package steammessages_cloud_steamclient is a generated protocol buffer package.

It is generated from these files:
	steammessages_cloud.steamclient.proto

It has these top-level messages:
	CCloud_GetUploadServerInfo_Request
	CCloud_GetUploadServerInfo_Response
	CCloud_GetFileDetails_Request
	CCloud_UserFile
	CCloud_GetFileDetails_Response
	CCloud_EnumerateUserFiles_Request
	CCloud_EnumerateUserFiles_Response
	CCloud_Delete_Request
	CCloud_Delete_Response
	CCloud_GetClientEncryptionKey_Request
	CCloud_GetClientEncryptionKey_Response
	CCloud_CDNReport_Notification
*/
package internal

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// discarding unused import google_protobuf "code.google.com/p/goprotobuf/protoc-gen-go/descriptor"
// discarding unused import steammessages_unified_base_steamclient "steammessages_unified_base.steamclient.pb"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type CCloud_GetUploadServerInfo_Request struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCloud_GetUploadServerInfo_Request) Reset()         { *m = CCloud_GetUploadServerInfo_Request{} }
func (m *CCloud_GetUploadServerInfo_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetUploadServerInfo_Request) ProtoMessage()    {}

func (m *CCloud_GetUploadServerInfo_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCloud_GetUploadServerInfo_Response struct {
	ServerUrl        *string `protobuf:"bytes,1,opt,name=server_url" json:"server_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCloud_GetUploadServerInfo_Response) Reset()         { *m = CCloud_GetUploadServerInfo_Response{} }
func (m *CCloud_GetUploadServerInfo_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetUploadServerInfo_Response) ProtoMessage()    {}

func (m *CCloud_GetUploadServerInfo_Response) GetServerUrl() string {
	if m != nil && m.ServerUrl != nil {
		return *m.ServerUrl
	}
	return ""
}

type CCloud_GetFileDetails_Request struct {
	Ugcid            *uint64 `protobuf:"varint,1,opt,name=ugcid" json:"ugcid,omitempty"`
	Appid            *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCloud_GetFileDetails_Request) Reset()         { *m = CCloud_GetFileDetails_Request{} }
func (m *CCloud_GetFileDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetFileDetails_Request) ProtoMessage()    {}

func (m *CCloud_GetFileDetails_Request) GetUgcid() uint64 {
	if m != nil && m.Ugcid != nil {
		return *m.Ugcid
	}
	return 0
}

func (m *CCloud_GetFileDetails_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCloud_UserFile struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Ugcid            *uint64 `protobuf:"varint,2,opt,name=ugcid" json:"ugcid,omitempty"`
	Filename         *string `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	Timestamp        *uint64 `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	FileSize         *uint32 `protobuf:"varint,5,opt,name=file_size" json:"file_size,omitempty"`
	Url              *string `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	SteamidCreator   *uint64 `protobuf:"fixed64,7,opt,name=steamid_creator" json:"steamid_creator,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCloud_UserFile) Reset()         { *m = CCloud_UserFile{} }
func (m *CCloud_UserFile) String() string { return proto.CompactTextString(m) }
func (*CCloud_UserFile) ProtoMessage()    {}

func (m *CCloud_UserFile) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_UserFile) GetUgcid() uint64 {
	if m != nil && m.Ugcid != nil {
		return *m.Ugcid
	}
	return 0
}

func (m *CCloud_UserFile) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCloud_UserFile) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CCloud_UserFile) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *CCloud_UserFile) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CCloud_UserFile) GetSteamidCreator() uint64 {
	if m != nil && m.SteamidCreator != nil {
		return *m.SteamidCreator
	}
	return 0
}

type CCloud_GetFileDetails_Response struct {
	Details          *CCloud_UserFile `protobuf:"bytes,1,opt,name=details" json:"details,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CCloud_GetFileDetails_Response) Reset()         { *m = CCloud_GetFileDetails_Response{} }
func (m *CCloud_GetFileDetails_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetFileDetails_Response) ProtoMessage()    {}

func (m *CCloud_GetFileDetails_Response) GetDetails() *CCloud_UserFile {
	if m != nil {
		return m.Details
	}
	return nil
}

type CCloud_EnumerateUserFiles_Request struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ExtendedDetails  *bool   `protobuf:"varint,2,opt,name=extended_details" json:"extended_details,omitempty"`
	Count            *uint32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	StartIndex       *uint32 `protobuf:"varint,4,opt,name=start_index" json:"start_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCloud_EnumerateUserFiles_Request) Reset()         { *m = CCloud_EnumerateUserFiles_Request{} }
func (m *CCloud_EnumerateUserFiles_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_EnumerateUserFiles_Request) ProtoMessage()    {}

func (m *CCloud_EnumerateUserFiles_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_EnumerateUserFiles_Request) GetExtendedDetails() bool {
	if m != nil && m.ExtendedDetails != nil {
		return *m.ExtendedDetails
	}
	return false
}

func (m *CCloud_EnumerateUserFiles_Request) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CCloud_EnumerateUserFiles_Request) GetStartIndex() uint32 {
	if m != nil && m.StartIndex != nil {
		return *m.StartIndex
	}
	return 0
}

type CCloud_EnumerateUserFiles_Response struct {
	Files            []*CCloud_UserFile `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
	TotalFiles       *uint32            `protobuf:"varint,2,opt,name=total_files" json:"total_files,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CCloud_EnumerateUserFiles_Response) Reset()         { *m = CCloud_EnumerateUserFiles_Response{} }
func (m *CCloud_EnumerateUserFiles_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_EnumerateUserFiles_Response) ProtoMessage()    {}

func (m *CCloud_EnumerateUserFiles_Response) GetFiles() []*CCloud_UserFile {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *CCloud_EnumerateUserFiles_Response) GetTotalFiles() uint32 {
	if m != nil && m.TotalFiles != nil {
		return *m.TotalFiles
	}
	return 0
}

type CCloud_Delete_Request struct {
	Filename         *string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Appid            *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCloud_Delete_Request) Reset()         { *m = CCloud_Delete_Request{} }
func (m *CCloud_Delete_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_Delete_Request) ProtoMessage()    {}

func (m *CCloud_Delete_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCloud_Delete_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCloud_Delete_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCloud_Delete_Response) Reset()         { *m = CCloud_Delete_Response{} }
func (m *CCloud_Delete_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_Delete_Response) ProtoMessage()    {}

type CCloud_GetClientEncryptionKey_Request struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCloud_GetClientEncryptionKey_Request) Reset()         { *m = CCloud_GetClientEncryptionKey_Request{} }
func (m *CCloud_GetClientEncryptionKey_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetClientEncryptionKey_Request) ProtoMessage()    {}

type CCloud_GetClientEncryptionKey_Response struct {
	Key              []byte `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Crc              *int32 `protobuf:"varint,2,opt,name=crc" json:"crc,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCloud_GetClientEncryptionKey_Response) Reset() {
	*m = CCloud_GetClientEncryptionKey_Response{}
}
func (m *CCloud_GetClientEncryptionKey_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetClientEncryptionKey_Response) ProtoMessage()    {}

func (m *CCloud_GetClientEncryptionKey_Response) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CCloud_GetClientEncryptionKey_Response) GetCrc() int32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

type CCloud_CDNReport_Notification struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Url              *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Success          *bool   `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	HttpStatusCode   *uint32 `protobuf:"varint,4,opt,name=http_status_code" json:"http_status_code,omitempty"`
	ExpectedBytes    *uint64 `protobuf:"varint,5,opt,name=expected_bytes" json:"expected_bytes,omitempty"`
	ReceivedBytes    *uint64 `protobuf:"varint,6,opt,name=received_bytes" json:"received_bytes,omitempty"`
	Duration         *uint32 `protobuf:"varint,7,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCloud_CDNReport_Notification) Reset()         { *m = CCloud_CDNReport_Notification{} }
func (m *CCloud_CDNReport_Notification) String() string { return proto.CompactTextString(m) }
func (*CCloud_CDNReport_Notification) ProtoMessage()    {}

func (m *CCloud_CDNReport_Notification) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CCloud_CDNReport_Notification) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CCloud_CDNReport_Notification) GetHttpStatusCode() uint32 {
	if m != nil && m.HttpStatusCode != nil {
		return *m.HttpStatusCode
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetExpectedBytes() uint64 {
	if m != nil && m.ExpectedBytes != nil {
		return *m.ExpectedBytes
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetReceivedBytes() uint64 {
	if m != nil && m.ReceivedBytes != nil {
		return *m.ReceivedBytes
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func init() {
}
