// Code generated by protoc-gen-go.
// source: steammessages_player.steamclient.proto
// DO NOT EDIT!

/*
Package steammessages_player_steamclient is a generated protocol buffer package.

It is generated from these files:
	steammessages_player.steamclient.proto

It has these top-level messages:
	CPlayer_GetRecentlyPlayedGames_Request
	CPlayer_GetRecentlyPlayedGames_Response
	CPlayer_GetOwnedGames_Request
	CPlayer_GetOwnedGames_Response
	CPlayer_GetSteamLevel_Request
	CPlayer_GetSteamLevel_Response
	CPlayer_GetGameBadgeLevels_Request
	CPlayer_GetGameBadgeLevels_Response
	CPlayer_GetSteamLevelDistribution_Request
	CPlayer_GetSteamLevelDistribution_Response
	CPlayer_GetBadges_Request
	CPlayer_GetBadges_Response
	CPlayer_GetCommunityBadgeProgress_Request
	CPlayer_GetCommunityBadgeProgress_Response
	CPlayer_GetLastPlayedTimes_Request
	CPlayer_GetLastPlayedTimes_Response
*/
package internal

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// discarding unused import google_protobuf "code.google.com/p/goprotobuf/protoc-gen-go/descriptor"
// discarding unused import steammessages_unified_base_steamclient "steammessages_unified_base.steamclient.pb"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type CPlayer_GetRecentlyPlayedGames_Request struct {
	Steamid          *uint64 `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	Count            *uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetRecentlyPlayedGames_Request) Reset() {
	*m = CPlayer_GetRecentlyPlayedGames_Request{}
}
func (m *CPlayer_GetRecentlyPlayedGames_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetRecentlyPlayedGames_Request) ProtoMessage()    {}

func (m *CPlayer_GetRecentlyPlayedGames_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CPlayer_GetRecentlyPlayedGames_Request) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type CPlayer_GetRecentlyPlayedGames_Response struct {
	TotalCount       *int32                                          `protobuf:"varint,1,opt,name=total_count" json:"total_count,omitempty"`
	Games            []*CPlayer_GetRecentlyPlayedGames_Response_Game `protobuf:"bytes,2,rep,name=games" json:"games,omitempty"`
	XXX_unrecognized []byte                                          `json:"-"`
}

func (m *CPlayer_GetRecentlyPlayedGames_Response) Reset() {
	*m = CPlayer_GetRecentlyPlayedGames_Response{}
}
func (m *CPlayer_GetRecentlyPlayedGames_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetRecentlyPlayedGames_Response) ProtoMessage()    {}

func (m *CPlayer_GetRecentlyPlayedGames_Response) GetTotalCount() int32 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

func (m *CPlayer_GetRecentlyPlayedGames_Response) GetGames() []*CPlayer_GetRecentlyPlayedGames_Response_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type CPlayer_GetRecentlyPlayedGames_Response_Game struct {
	Appid            *int32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Playtime_2Weeks  *int32  `protobuf:"varint,3,opt,name=playtime_2weeks" json:"playtime_2weeks,omitempty"`
	PlaytimeForever  *int32  `protobuf:"varint,4,opt,name=playtime_forever" json:"playtime_forever,omitempty"`
	ImgIconUrl       *string `protobuf:"bytes,5,opt,name=img_icon_url" json:"img_icon_url,omitempty"`
	ImgLogoUrl       *string `protobuf:"bytes,6,opt,name=img_logo_url" json:"img_logo_url,omitempty"`
	FriendlyName     *string `protobuf:"bytes,7,opt,name=friendly_name" json:"friendly_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) Reset() {
	*m = CPlayer_GetRecentlyPlayedGames_Response_Game{}
}
func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) String() string {
	return proto.CompactTextString(m)
}
func (*CPlayer_GetRecentlyPlayedGames_Response_Game) ProtoMessage() {}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) GetPlaytime_2Weeks() int32 {
	if m != nil && m.Playtime_2Weeks != nil {
		return *m.Playtime_2Weeks
	}
	return 0
}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) GetPlaytimeForever() int32 {
	if m != nil && m.PlaytimeForever != nil {
		return *m.PlaytimeForever
	}
	return 0
}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) GetImgIconUrl() string {
	if m != nil && m.ImgIconUrl != nil {
		return *m.ImgIconUrl
	}
	return ""
}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) GetImgLogoUrl() string {
	if m != nil && m.ImgLogoUrl != nil {
		return *m.ImgLogoUrl
	}
	return ""
}

func (m *CPlayer_GetRecentlyPlayedGames_Response_Game) GetFriendlyName() string {
	if m != nil && m.FriendlyName != nil {
		return *m.FriendlyName
	}
	return ""
}

type CPlayer_GetOwnedGames_Request struct {
	Steamid                *uint64  `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	IncludeAppinfo         *bool    `protobuf:"varint,2,opt,name=include_appinfo" json:"include_appinfo,omitempty"`
	IncludePlayedFreeGames *bool    `protobuf:"varint,3,opt,name=include_played_free_games" json:"include_played_free_games,omitempty"`
	AppidsFilter           []uint32 `protobuf:"varint,4,rep,name=appids_filter" json:"appids_filter,omitempty"`
	XXX_unrecognized       []byte   `json:"-"`
}

func (m *CPlayer_GetOwnedGames_Request) Reset()         { *m = CPlayer_GetOwnedGames_Request{} }
func (m *CPlayer_GetOwnedGames_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetOwnedGames_Request) ProtoMessage()    {}

func (m *CPlayer_GetOwnedGames_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CPlayer_GetOwnedGames_Request) GetIncludeAppinfo() bool {
	if m != nil && m.IncludeAppinfo != nil {
		return *m.IncludeAppinfo
	}
	return false
}

func (m *CPlayer_GetOwnedGames_Request) GetIncludePlayedFreeGames() bool {
	if m != nil && m.IncludePlayedFreeGames != nil {
		return *m.IncludePlayedFreeGames
	}
	return false
}

func (m *CPlayer_GetOwnedGames_Request) GetAppidsFilter() []uint32 {
	if m != nil {
		return m.AppidsFilter
	}
	return nil
}

type CPlayer_GetOwnedGames_Response struct {
	GameCount        *uint32                                `protobuf:"varint,1,opt,name=game_count" json:"game_count,omitempty"`
	Games            []*CPlayer_GetOwnedGames_Response_Game `protobuf:"bytes,2,rep,name=games" json:"games,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CPlayer_GetOwnedGames_Response) Reset()         { *m = CPlayer_GetOwnedGames_Response{} }
func (m *CPlayer_GetOwnedGames_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetOwnedGames_Response) ProtoMessage()    {}

func (m *CPlayer_GetOwnedGames_Response) GetGameCount() uint32 {
	if m != nil && m.GameCount != nil {
		return *m.GameCount
	}
	return 0
}

func (m *CPlayer_GetOwnedGames_Response) GetGames() []*CPlayer_GetOwnedGames_Response_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type CPlayer_GetOwnedGames_Response_Game struct {
	Appid                    *int32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Name                     *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Playtime_2Weeks          *int32  `protobuf:"varint,3,opt,name=playtime_2weeks" json:"playtime_2weeks,omitempty"`
	PlaytimeForever          *int32  `protobuf:"varint,4,opt,name=playtime_forever" json:"playtime_forever,omitempty"`
	ImgIconUrl               *string `protobuf:"bytes,5,opt,name=img_icon_url" json:"img_icon_url,omitempty"`
	ImgLogoUrl               *string `protobuf:"bytes,6,opt,name=img_logo_url" json:"img_logo_url,omitempty"`
	HasCommunityVisibleStats *bool   `protobuf:"varint,7,opt,name=has_community_visible_stats" json:"has_community_visible_stats,omitempty"`
	XXX_unrecognized         []byte  `json:"-"`
}

func (m *CPlayer_GetOwnedGames_Response_Game) Reset()         { *m = CPlayer_GetOwnedGames_Response_Game{} }
func (m *CPlayer_GetOwnedGames_Response_Game) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetOwnedGames_Response_Game) ProtoMessage()    {}

func (m *CPlayer_GetOwnedGames_Response_Game) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPlayer_GetOwnedGames_Response_Game) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CPlayer_GetOwnedGames_Response_Game) GetPlaytime_2Weeks() int32 {
	if m != nil && m.Playtime_2Weeks != nil {
		return *m.Playtime_2Weeks
	}
	return 0
}

func (m *CPlayer_GetOwnedGames_Response_Game) GetPlaytimeForever() int32 {
	if m != nil && m.PlaytimeForever != nil {
		return *m.PlaytimeForever
	}
	return 0
}

func (m *CPlayer_GetOwnedGames_Response_Game) GetImgIconUrl() string {
	if m != nil && m.ImgIconUrl != nil {
		return *m.ImgIconUrl
	}
	return ""
}

func (m *CPlayer_GetOwnedGames_Response_Game) GetImgLogoUrl() string {
	if m != nil && m.ImgLogoUrl != nil {
		return *m.ImgLogoUrl
	}
	return ""
}

func (m *CPlayer_GetOwnedGames_Response_Game) GetHasCommunityVisibleStats() bool {
	if m != nil && m.HasCommunityVisibleStats != nil {
		return *m.HasCommunityVisibleStats
	}
	return false
}

type CPlayer_GetSteamLevel_Request struct {
	Steamid          *uint64 `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetSteamLevel_Request) Reset()         { *m = CPlayer_GetSteamLevel_Request{} }
func (m *CPlayer_GetSteamLevel_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetSteamLevel_Request) ProtoMessage()    {}

func (m *CPlayer_GetSteamLevel_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CPlayer_GetSteamLevel_Response struct {
	PlayerLevel      *uint32 `protobuf:"varint,1,opt,name=player_level" json:"player_level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetSteamLevel_Response) Reset()         { *m = CPlayer_GetSteamLevel_Response{} }
func (m *CPlayer_GetSteamLevel_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetSteamLevel_Response) ProtoMessage()    {}

func (m *CPlayer_GetSteamLevel_Response) GetPlayerLevel() uint32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

type CPlayer_GetGameBadgeLevels_Request struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetGameBadgeLevels_Request) Reset()         { *m = CPlayer_GetGameBadgeLevels_Request{} }
func (m *CPlayer_GetGameBadgeLevels_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetGameBadgeLevels_Request) ProtoMessage()    {}

func (m *CPlayer_GetGameBadgeLevels_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CPlayer_GetGameBadgeLevels_Response struct {
	PlayerLevel      *uint32                                      `protobuf:"varint,1,opt,name=player_level" json:"player_level,omitempty"`
	Badges           []*CPlayer_GetGameBadgeLevels_Response_Badge `protobuf:"bytes,2,rep,name=badges" json:"badges,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CPlayer_GetGameBadgeLevels_Response) Reset()         { *m = CPlayer_GetGameBadgeLevels_Response{} }
func (m *CPlayer_GetGameBadgeLevels_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetGameBadgeLevels_Response) ProtoMessage()    {}

func (m *CPlayer_GetGameBadgeLevels_Response) GetPlayerLevel() uint32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

func (m *CPlayer_GetGameBadgeLevels_Response) GetBadges() []*CPlayer_GetGameBadgeLevels_Response_Badge {
	if m != nil {
		return m.Badges
	}
	return nil
}

type CPlayer_GetGameBadgeLevels_Response_Badge struct {
	Level            *int32  `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Series           *int32  `protobuf:"varint,2,opt,name=series" json:"series,omitempty"`
	BorderColor      *uint32 `protobuf:"varint,3,opt,name=border_color" json:"border_color,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) Reset() {
	*m = CPlayer_GetGameBadgeLevels_Response_Badge{}
}
func (m *CPlayer_GetGameBadgeLevels_Response_Badge) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetGameBadgeLevels_Response_Badge) ProtoMessage()    {}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) GetSeries() int32 {
	if m != nil && m.Series != nil {
		return *m.Series
	}
	return 0
}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) GetBorderColor() uint32 {
	if m != nil && m.BorderColor != nil {
		return *m.BorderColor
	}
	return 0
}

type CPlayer_GetSteamLevelDistribution_Request struct {
	PlayerLevel      *uint32 `protobuf:"varint,1,opt,name=player_level" json:"player_level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetSteamLevelDistribution_Request) Reset() {
	*m = CPlayer_GetSteamLevelDistribution_Request{}
}
func (m *CPlayer_GetSteamLevelDistribution_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetSteamLevelDistribution_Request) ProtoMessage()    {}

func (m *CPlayer_GetSteamLevelDistribution_Request) GetPlayerLevel() uint32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

type CPlayer_GetSteamLevelDistribution_Response struct {
	PlayerLevelPercentile *float32 `protobuf:"fixed32,1,opt,name=player_level_percentile" json:"player_level_percentile,omitempty"`
	Top_100Ranking        *uint32  `protobuf:"varint,2,opt,name=top_100_ranking" json:"top_100_ranking,omitempty"`
	XXX_unrecognized      []byte   `json:"-"`
}

func (m *CPlayer_GetSteamLevelDistribution_Response) Reset() {
	*m = CPlayer_GetSteamLevelDistribution_Response{}
}
func (m *CPlayer_GetSteamLevelDistribution_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CPlayer_GetSteamLevelDistribution_Response) ProtoMessage() {}

func (m *CPlayer_GetSteamLevelDistribution_Response) GetPlayerLevelPercentile() float32 {
	if m != nil && m.PlayerLevelPercentile != nil {
		return *m.PlayerLevelPercentile
	}
	return 0
}

func (m *CPlayer_GetSteamLevelDistribution_Response) GetTop_100Ranking() uint32 {
	if m != nil && m.Top_100Ranking != nil {
		return *m.Top_100Ranking
	}
	return 0
}

type CPlayer_GetBadges_Request struct {
	Steamid          *uint64 `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetBadges_Request) Reset()         { *m = CPlayer_GetBadges_Request{} }
func (m *CPlayer_GetBadges_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetBadges_Request) ProtoMessage()    {}

func (m *CPlayer_GetBadges_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CPlayer_GetBadges_Response struct {
	Badges                     []*CPlayer_GetBadges_Response_Badge `protobuf:"bytes,1,rep,name=badges" json:"badges,omitempty"`
	PlayerXp                   *uint32                             `protobuf:"varint,2,opt,name=player_xp" json:"player_xp,omitempty"`
	PlayerLevel                *uint32                             `protobuf:"varint,3,opt,name=player_level" json:"player_level,omitempty"`
	PlayerXpNeededToLevelUp    *uint32                             `protobuf:"varint,5,opt,name=player_xp_needed_to_level_up" json:"player_xp_needed_to_level_up,omitempty"`
	PlayerXpNeededCurrentLevel *uint32                             `protobuf:"varint,6,opt,name=player_xp_needed_current_level" json:"player_xp_needed_current_level,omitempty"`
	XXX_unrecognized           []byte                              `json:"-"`
}

func (m *CPlayer_GetBadges_Response) Reset()         { *m = CPlayer_GetBadges_Response{} }
func (m *CPlayer_GetBadges_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetBadges_Response) ProtoMessage()    {}

func (m *CPlayer_GetBadges_Response) GetBadges() []*CPlayer_GetBadges_Response_Badge {
	if m != nil {
		return m.Badges
	}
	return nil
}

func (m *CPlayer_GetBadges_Response) GetPlayerXp() uint32 {
	if m != nil && m.PlayerXp != nil {
		return *m.PlayerXp
	}
	return 0
}

func (m *CPlayer_GetBadges_Response) GetPlayerLevel() uint32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

func (m *CPlayer_GetBadges_Response) GetPlayerXpNeededToLevelUp() uint32 {
	if m != nil && m.PlayerXpNeededToLevelUp != nil {
		return *m.PlayerXpNeededToLevelUp
	}
	return 0
}

func (m *CPlayer_GetBadges_Response) GetPlayerXpNeededCurrentLevel() uint32 {
	if m != nil && m.PlayerXpNeededCurrentLevel != nil {
		return *m.PlayerXpNeededCurrentLevel
	}
	return 0
}

type CPlayer_GetBadges_Response_Badge struct {
	Badgeid          *int32  `protobuf:"varint,1,opt,name=badgeid" json:"badgeid,omitempty"`
	Appid            *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Level            *int32  `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	CompletionTime   *uint32 `protobuf:"varint,4,opt,name=completion_time" json:"completion_time,omitempty"`
	Xp               *uint32 `protobuf:"varint,5,opt,name=xp" json:"xp,omitempty"`
	Communityitemid  *uint64 `protobuf:"varint,6,opt,name=communityitemid" json:"communityitemid,omitempty"`
	BorderColor      *uint32 `protobuf:"varint,7,opt,name=border_color" json:"border_color,omitempty"`
	Scarcity         *uint32 `protobuf:"varint,8,opt,name=scarcity" json:"scarcity,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetBadges_Response_Badge) Reset()         { *m = CPlayer_GetBadges_Response_Badge{} }
func (m *CPlayer_GetBadges_Response_Badge) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetBadges_Response_Badge) ProtoMessage()    {}

func (m *CPlayer_GetBadges_Response_Badge) GetBadgeid() int32 {
	if m != nil && m.Badgeid != nil {
		return *m.Badgeid
	}
	return 0
}

func (m *CPlayer_GetBadges_Response_Badge) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPlayer_GetBadges_Response_Badge) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CPlayer_GetBadges_Response_Badge) GetCompletionTime() uint32 {
	if m != nil && m.CompletionTime != nil {
		return *m.CompletionTime
	}
	return 0
}

func (m *CPlayer_GetBadges_Response_Badge) GetXp() uint32 {
	if m != nil && m.Xp != nil {
		return *m.Xp
	}
	return 0
}

func (m *CPlayer_GetBadges_Response_Badge) GetCommunityitemid() uint64 {
	if m != nil && m.Communityitemid != nil {
		return *m.Communityitemid
	}
	return 0
}

func (m *CPlayer_GetBadges_Response_Badge) GetBorderColor() uint32 {
	if m != nil && m.BorderColor != nil {
		return *m.BorderColor
	}
	return 0
}

func (m *CPlayer_GetBadges_Response_Badge) GetScarcity() uint32 {
	if m != nil && m.Scarcity != nil {
		return *m.Scarcity
	}
	return 0
}

type CPlayer_GetCommunityBadgeProgress_Request struct {
	Steamid          *uint64 `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	Badgeid          *int32  `protobuf:"varint,2,opt,name=badgeid" json:"badgeid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetCommunityBadgeProgress_Request) Reset() {
	*m = CPlayer_GetCommunityBadgeProgress_Request{}
}
func (m *CPlayer_GetCommunityBadgeProgress_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetCommunityBadgeProgress_Request) ProtoMessage()    {}

func (m *CPlayer_GetCommunityBadgeProgress_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CPlayer_GetCommunityBadgeProgress_Request) GetBadgeid() int32 {
	if m != nil && m.Badgeid != nil {
		return *m.Badgeid
	}
	return 0
}

type CPlayer_GetCommunityBadgeProgress_Response struct {
	Quests           []*CPlayer_GetCommunityBadgeProgress_Response_Quest `protobuf:"bytes,1,rep,name=quests" json:"quests,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CPlayer_GetCommunityBadgeProgress_Response) Reset() {
	*m = CPlayer_GetCommunityBadgeProgress_Response{}
}
func (m *CPlayer_GetCommunityBadgeProgress_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CPlayer_GetCommunityBadgeProgress_Response) ProtoMessage() {}

func (m *CPlayer_GetCommunityBadgeProgress_Response) GetQuests() []*CPlayer_GetCommunityBadgeProgress_Response_Quest {
	if m != nil {
		return m.Quests
	}
	return nil
}

type CPlayer_GetCommunityBadgeProgress_Response_Quest struct {
	Questid          *uint32 `protobuf:"varint,1,opt,name=questid" json:"questid,omitempty"`
	Completed        *bool   `protobuf:"varint,2,opt,name=completed" json:"completed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetCommunityBadgeProgress_Response_Quest) Reset() {
	*m = CPlayer_GetCommunityBadgeProgress_Response_Quest{}
}
func (m *CPlayer_GetCommunityBadgeProgress_Response_Quest) String() string {
	return proto.CompactTextString(m)
}
func (*CPlayer_GetCommunityBadgeProgress_Response_Quest) ProtoMessage() {}

func (m *CPlayer_GetCommunityBadgeProgress_Response_Quest) GetQuestid() uint32 {
	if m != nil && m.Questid != nil {
		return *m.Questid
	}
	return 0
}

func (m *CPlayer_GetCommunityBadgeProgress_Response_Quest) GetCompleted() bool {
	if m != nil && m.Completed != nil {
		return *m.Completed
	}
	return false
}

type CPlayer_GetLastPlayedTimes_Request struct {
	MinLastPlayed    *uint32 `protobuf:"varint,1,opt,name=min_last_played" json:"min_last_played,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetLastPlayedTimes_Request) Reset()         { *m = CPlayer_GetLastPlayedTimes_Request{} }
func (m *CPlayer_GetLastPlayedTimes_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetLastPlayedTimes_Request) ProtoMessage()    {}

func (m *CPlayer_GetLastPlayedTimes_Request) GetMinLastPlayed() uint32 {
	if m != nil && m.MinLastPlayed != nil {
		return *m.MinLastPlayed
	}
	return 0
}

type CPlayer_GetLastPlayedTimes_Response struct {
	Games            []*CPlayer_GetLastPlayedTimes_Response_Game `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CPlayer_GetLastPlayedTimes_Response) Reset()         { *m = CPlayer_GetLastPlayedTimes_Response{} }
func (m *CPlayer_GetLastPlayedTimes_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetLastPlayedTimes_Response) ProtoMessage()    {}

func (m *CPlayer_GetLastPlayedTimes_Response) GetGames() []*CPlayer_GetLastPlayedTimes_Response_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type CPlayer_GetLastPlayedTimes_Response_Game struct {
	Appid            *int32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	LastPlaytime     *uint32 `protobuf:"varint,2,opt,name=last_playtime" json:"last_playtime,omitempty"`
	Playtime_2Weeks  *int32  `protobuf:"varint,3,opt,name=playtime_2weeks" json:"playtime_2weeks,omitempty"`
	PlaytimeForever  *int32  `protobuf:"varint,4,opt,name=playtime_forever" json:"playtime_forever,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) Reset() {
	*m = CPlayer_GetLastPlayedTimes_Response_Game{}
}
func (m *CPlayer_GetLastPlayedTimes_Response_Game) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetLastPlayedTimes_Response_Game) ProtoMessage()    {}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetLastPlaytime() uint32 {
	if m != nil && m.LastPlaytime != nil {
		return *m.LastPlaytime
	}
	return 0
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetPlaytime_2Weeks() int32 {
	if m != nil && m.Playtime_2Weeks != nil {
		return *m.Playtime_2Weeks
	}
	return 0
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetPlaytimeForever() int32 {
	if m != nil && m.PlaytimeForever != nil {
		return *m.PlaytimeForever
	}
	return 0
}

func init() {
}
