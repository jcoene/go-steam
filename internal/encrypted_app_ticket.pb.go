// Code generated by protoc-gen-go.
// source: encrypted_app_ticket.proto
// DO NOT EDIT!

/*
Package encrypted_app_ticket is a generated protocol buffer package.

It is generated from these files:
	encrypted_app_ticket.proto

It has these top-level messages:
	EncryptedAppTicket
*/
package internal

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type EncryptedAppTicket struct {
	TicketVersionNo               *uint32 `protobuf:"varint,1,opt,name=ticket_version_no" json:"ticket_version_no,omitempty"`
	CrcEncryptedticket            *uint32 `protobuf:"varint,2,opt,name=crc_encryptedticket" json:"crc_encryptedticket,omitempty"`
	CbEncrypteduserdata           *uint32 `protobuf:"varint,3,opt,name=cb_encrypteduserdata" json:"cb_encrypteduserdata,omitempty"`
	CbEncryptedAppownershipticket *uint32 `protobuf:"varint,4,opt,name=cb_encrypted_appownershipticket" json:"cb_encrypted_appownershipticket,omitempty"`
	EncryptedTicket               []byte  `protobuf:"bytes,5,opt,name=encrypted_ticket" json:"encrypted_ticket,omitempty"`
	XXX_unrecognized              []byte  `json:"-"`
}

func (m *EncryptedAppTicket) Reset()         { *m = EncryptedAppTicket{} }
func (m *EncryptedAppTicket) String() string { return proto.CompactTextString(m) }
func (*EncryptedAppTicket) ProtoMessage()    {}

func (m *EncryptedAppTicket) GetTicketVersionNo() uint32 {
	if m != nil && m.TicketVersionNo != nil {
		return *m.TicketVersionNo
	}
	return 0
}

func (m *EncryptedAppTicket) GetCrcEncryptedticket() uint32 {
	if m != nil && m.CrcEncryptedticket != nil {
		return *m.CrcEncryptedticket
	}
	return 0
}

func (m *EncryptedAppTicket) GetCbEncrypteduserdata() uint32 {
	if m != nil && m.CbEncrypteduserdata != nil {
		return *m.CbEncrypteduserdata
	}
	return 0
}

func (m *EncryptedAppTicket) GetCbEncryptedAppownershipticket() uint32 {
	if m != nil && m.CbEncryptedAppownershipticket != nil {
		return *m.CbEncryptedAppownershipticket
	}
	return 0
}

func (m *EncryptedAppTicket) GetEncryptedTicket() []byte {
	if m != nil {
		return m.EncryptedTicket
	}
	return nil
}

func init() {
}
